
<%= form_for @user, url: (@user.new? ? CartoDB.url(self, 'create_organization_user', {}, current_user) : CartoDB.url(self, 'update_organization_user', {id: @user.username}, current_user)), :html => {:class => 'Form js-organizationUserForm'} do |f| %>

  <%= f.hidden_field :private_tables_enabled %>
  <%= hidden_field_tag :show_account_settings_flash, true %>
  <%= csrf_meta_tags %>

  <span class="FormAccount-separator"></span>

  <div class="FormAccount-row">
    <div class="FormAccount-rowLabel">
      <label class="FormAccount-label">Username</label>
    </div>
    <div class="FormAccount-rowData">
      <%= f.text_field :username, :class => "FormAccount-input FormAccount-input--med #{ 'is-disabled' if !@user.new? } #{ 'FormAccount-input--error' if @user.errors[:username].present? }", :readonly => !@user.new? %>
      <div class="FormAccount-rowInfo FormAccount-rowInfo--marginLeft">
        <% if (@user.errors[:username].present?) %>
          <p class="FormAccount-rowInfoText FormAccount-rowInfoText--error">Username not valid</p>
        <% elsif @user.new? %>
          <p class="FormAccount-rowInfoText">Once you choose the username, you won't be able to change it</p>
        <% end %>
      </div>
    </div>
  </div>

  <div class="FormAccount-row">
    <div class="FormAccount-rowLabel">
      <label class="FormAccount-label">Email</label>
    </div>
    <div class="FormAccount-rowData">
      <%= f.text_field :email, :class => "FormAccount-input FormAccount-input--med #{ 'is-disabled' if !@user.can_change_email? } #{ 'FormAccount-input--error' if @user.errors[:email].present? }", readonly: !@user.can_change_email? %>
      <div class="FormAccount-rowInfo FormAccount-rowInfo--marginLeft">
        <% if (@user.errors[:email].present?) %>
          <p class="FormAccount-rowInfoText FormAccount-rowInfoText--error">Email not valid</p>
        <% elsif @user.new? %>
          <p class="FormAccount-rowInfoText">We encourage you to choose an email from your organization</p>
        <% end %>
      </div>
    </div>
  </div>

  <% if current_user.organization.auth_username_password_enabled %>

    <div class="VerticalAligned--FormRow">
      <div class="FormAccount-row">
        <div class="FormAccount-rowLabel">
          <label class="FormAccount-label">New password</label>
        </div>
        <div class="FormAccount-rowData">
          <%= password_field_tag 'user[password]', nil, :placeholder => "New password", :class => "FormAccount-input FormAccount-input--med #{ 'is-disabled' if !@user.can_change_password? } #{ 'FormAccount-input--error' if @user.errors[:password].present? }", readonly: !@user.can_change_password? %>
        </div>
        <div class="FormAccount-rowInfo">
          <% if (@user.errors[:password].present?) %>
            <p class="FormAccount-rowInfoText FormAccount-rowInfoText--error"><%= @user.errors[:password].first%></p>
          <% end %>
        </div>
      </div>

      <div class="FormAccount-row">
        <div class="FormAccount-rowLabel">
          <label class="FormAccount-label">Confirm password</label>
        </div>
        <div class="FormAccount-rowData">
          <%= password_field_tag 'user[password_confirmation]', nil, :placeholder => "Confirm new password", :class => "FormAccount-input FormAccount-input--med #{ 'is-disabled' if !@user.can_change_password? } #{ 'FormAccount-input--error' if @user.errors[:password].present?}", readonly: !@user.can_change_password? %>
        </div>
      </div>
    </div>

  <% end %>

  <div class="FormAccount-title">
    <p class="FormAccount-titleText">User quotas</p>
  </div>

  <span class="FormAccount-separator"></span>

  <div class="FormAccount-row">
    <div class="OrganizationUser-quota js-userQuota">
      <div class="FormAccount-rowData FormAccount-rowData--med OrganizationUser-quotaProgress js-userQuotaSlider">
        <div class="UISlider UserQuotaDropdown-slider js-slider progress-bar overflow-visible">
        <% available_quota_for_user = current_user.organization.unassigned_quota + current_user.quota_in_bytes %>
          <% assignedPer = ((@user.quota_in_bytes.to_f * 100) / available_quota_for_user) %>
          <% if !@user.new? %>
            <% usedPer = ((@user.db_size_in_bytes.to_f * 100) / available_quota_for_user) %>
            <span class="js-usedUserQuota bar-3" style="width:<%= usedPer %>%"></span>
          <% end %>
        </div>
        <ul class="OrganizationUser-quotaLegend">
          <% if !@user.new? %>
            <li class="OrganizationUser-quotaLegendItem">
              <i class="OrganizationUser-quotaLegendIcon OrganizationUser-quotaLegendIcon--used"></i>
              Used by user
            </li>
          <% end %>
          <li class="OrganizationUser-quotaLegendItem">
            <i class="OrganizationUser-quotaLegendIcon OrganizationUser-quotaLegendIcon--assigned"></i>
            Assigned to user
          </li>
          <li class="OrganizationUser-quotaLegendItem">
            <i class="OrganizationUser-quotaLegendIcon"></i>
            Total
          </li>
        </ul>
      </div>
      <div class="FormAccount-rowInfo FormAccount-rowInfo--marginLeft OrganizationUser-quotaInfo js-userQuotaSliderInput">
        <span><%= text_field_tag nil, nil, :class => "FormAccount-input OrganizationUser-quotaInfoInput js-assignedSize" %> MB<% unless cartodb_com_hosted? %>, <a href="<%= current_user.upgrade_url(request.protocol) %>">upgrade your account</a> if needed.<% end %></span>
      </div>
      <%= f.hidden_field :quota_in_bytes, :id => "user_quota" %>
    </div>
  </div>

  <div class="FormAccount-row">
    <div class="FormAccount-rowLabel">
      <label class="FormAccount-label">Extra geocoding</label>
    </div>
    <div class="FormAccount-rowData">
      <div class="Toggler">
        <%= f.check_box :soft_geocoding_limit, id: "soft_geocoding_limit", disabled: !current_user.soft_geocoding_limit %>
        <%= label_tag(:soft_geocoding_limit, '') %>
      </div>
      <div class="FormAccount-rowInfo FormAccount-rowInfo--marginLeft">
        <% if current_user.soft_geocoding_limit %>
          <p class="FormAccount-rowInfoText">User has permission to exceed organization's geocoding quota</p>
        <% else %>
          <p class="FormAccount-rowInfoText">You can't enable extra quota. Contact support for more information.</p>
        <% end %>
      </div>
    </div>
  </div>

  <div class="FormAccount-row">
    <div class="FormAccount-rowLabel">
      <label class="FormAccount-label">Extra Here Isolines</label>
    </div>
    <div class="FormAccount-rowData">
      <div class="Toggler">
        <%= f.check_box :soft_here_isolines_limit, id: "soft_here_isolines_limit", disabled: !current_user.soft_here_isolines_limit %>
        <%= label_tag(:soft_here_isolines_limit, '') %>
      </div>
      <div class="FormAccount-rowInfo FormAccount-rowInfo--marginLeft">
        <% if current_user.soft_here_isolines_limit %>
          <p class="FormAccount-rowInfoText">User has permission to exceed organization's isolines quota from Here provider</p>
        <% else %>
          <p class="FormAccount-rowInfoText">You can't enable extra quota. Contact support for more information.</p>
        <% end %>
      </div>
    </div>
  </div>

  <% if current_user && current_user.organization && current_user.organization.twitter_datasource_enabled %>
    <div class="FormAccount-row">
      <div class="FormAccount-rowLabel">
        <label class="FormAccount-label">Extra tweets</label>
      </div>
      <div class="FormAccount-rowData">
        <div class="Toggler">
          <%= f.check_box :soft_twitter_datasource_limit, id: "soft_twitter_datasource_limit", disabled: !current_user.soft_twitter_datasource_limit %>
          <%= label_tag(:soft_twitter_datasource_limit, '') %>
        </div>
        <div class="FormAccount-rowInfo FormAccount-rowInfo--marginLeft">
          <% if current_user.soft_twitter_datasource_limit %>
            <p class="FormAccount-rowInfoText">User has permission to exceed organization's Twitter credits</p>
          <% else %>
            <p class="FormAccount-rowInfoText">You can't enable extra quota. Contact support for more information.</p>
          <% end %>
        </div>
      </div>
    </div>
  <% end %>

  <% if !@user.new? && current_user.organization_owner? -%>
    <div class="FormAccount-row">
      <div class="FormAccount-rowLabel">
        <label class="FormAccount-label">User API key</label>
      </div>
      <div class="FormAccount-rowData">
        <%= f.text_field :api_key, :class => "FormAccount-input FormAccount-input--med is-disabled", :readonly => true %>
        <div class="FormAccount-rowInfo FormAccount-rowInfo--marginLeft">
          <button class="Button--link js-regenerateOrgUserApiKey" data-username="<%= @user.username %>" data-current_username="<%= current_user.username %>" type="button">Regenerate API key</button>
        </div>
      </div>
    </div>
  <% end %>

  <div class="FormAccount-footer">
    <% if !@user.new? && current_user.organization_owner? -%>
      <% if @user != current_user %>
        <button href="<%= CartoDB.url(self, 'delete_organization_user', {id: @user.username}, current_user) %>" type="button" class="Button Button--secondary js-deleteAccount">
          <span>Delete this user</span>
        </button>
      <% else %>
        <em></em>
      <% end %>
      <button type="submit" class="Button Button--main">
        <span>Save changes</span>
      </button>
    <% else %>
      <em></em>
      <button type="submit" class="Button Button--main">
        <span>Create user</span>
      </button>
    <% end %>
  </div>

<% end %>

<script type="text/javascript">
  <% if !@user.new? %>
    var organization_user_data = <%= safe_js_object @user.data.to_json %>;
  <% else %>
    <% @user.values[:db_size_in_bytes] = 0 %>
    <% @user.values[:organization] = current_user.data[:organization] %>
    <% @user.values[:quota_available_for_user] = current_user.data[:organization][:unassigned_quota] + @user.values[:quota_in_bytes] %>

    var organization_user_data = <%= safe_js_object @user.values.to_json %>;
  <% end %>
</script>
