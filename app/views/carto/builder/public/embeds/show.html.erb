<% require_dependency 'static_maps_url_helper' %>

<%= content_for(:title) do %><%= @vizjson[:title].nil? ? 'Untitled map' : @vizjson[:title] %><% end %>

<%= content_for(:description) do %><%= @vizjson[:description] ? "#{@vizjson[:description].strip_tags}. " : "" %>Map created by <%= @vizjson[:user][:fullname] %> in CARTO<% end %>

<%= content_for(:twitter_card) do %><%= Carto::StaticMapsURLHelper.new.url_for_static_map(request, @visualization, 560, 300) %><% end %>

<%= content_for(:facebook_card) do %><%= Carto::StaticMapsURLHelper.new.url_for_static_map(request, @visualization, 1200, 630) %><% end %>

<%= content_for(:css) do %>
  <%= stylesheet_link_tag 'builder_embed', media: 'all' %>
  <style type="text/css">
    html, body {
      height: 100%;
      margin: 0;
      padding: 0;
      position: relative;
    }
  </style>
<% end %>

<%= content_for(:content) do %>
  <div id="dashboard"></div>
<% end %>

<%= content_for(:js) do %>
  <%= insert_trackjs('builder-embeds', Cartodb.get_config(:trackjs, 'frequency')) %>

  <% if @vizjson[:map_provider] == 'googlemaps' && @google_maps_qs.present? %>
    <%= insert_google_maps(@google_maps_qs) %>
  <% end %>

  <script>
    var vizJSON = <%= safe_js_object @vizjson.to_hash.to_json %>;
    var layersData = <%= safe_js_object @layers_data.to_json %>;
    var stateJSON = <%= safe_js_object @state.to_json %>;
    var authTokens = <%= safe_js_object @auth_tokens.to_json %>;
    var geocoderConfiguration = <%= safe_js_object geocoder_config.to_json %>;
    var ownerData = <%= safe_js_object get_owner_data(@viz_owner).to_json %>;
  </script>
  <%= javascript_include_tag 'common', 'common_vendor', 'builder_embed' %>

  <% if Cartodb.get_config(:graphite_public, 'host') %>
    <%= editor_javascript_include_tag "statsc.js" %>
  <% end %>
  <script>
    (function () {
      <% if Cartodb.get_config(:graphite_public, 'host') %>
        if (location.protocol.indexOf('https') === -1) {
          statsc.connect('http://<%= Cartodb.get_config(:graphite_public, 'host') %>:<%= Cartodb.get_config(:graphite_public, 'port') %>/');
          cartodb.core.Profiler.backend(function () {
            statsc.send.apply(statsc, arguments);
          });
        }
      <% end %>
    }());
  </script>

<% end %>
