steps:

# Cancel previous job on the same branch
- name: gcr.io/cloud-builders/gcloud
  entrypoint: /bin/bash
  args:
  - '-c'
  - 'gcloud builds list --ongoing --filter="buildTriggerId=e323286e-7003-4480-ae34-677e597ce4dc AND substitutions.BRANCH_NAME=${BRANCH_NAME} AND id!=${BUILD_ID}" --format="get(ID)" > jobs_to_cancel'

- name: gcr.io/cloud-builders/gcloud
  entrypoint: /bin/bash
  args:
  - '-c'
  - 'gcloud builds cancel $(cat jobs_to_cancel | xargs) || true'

# Decrypt github key
- name: gcr.io/cloud-builders/gcloud
  args:
  - kms
  - decrypt
  - --ciphertext-file=script/ci/.id_github_cartofante.enc
  - --plaintext-file=/root/.ssh/id_rsa
  - --location=global
  - --keyring=keyring-github-ci
  - --key=github-key
  volumes:
  - name: 'ssh'
    path: /root/.ssh

# Set up git with key and domain
- name: 'gcr.io/cloud-builders/git'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    chmod 600 /root/.ssh/id_rsa
    cat <<EOF >/root/.ssh/config
    Hostname github.com
    IdentityFile /root/.ssh/id_rsa
    EOF
    mv script/ci/known_hosts /root/.ssh/known_hosts
  volumes:
  - name: 'ssh'
    path: /root/.ssh

# Clean working directory
- name: alpine
  args: ['sh', '-c', 'rm -rf .* | true && rm -rf *']

# Checkout repo with submodules
- name: 'gcr.io/cloud-builders/git'
  entrypoint: 'sh'
  args: ['-c', 'git clone git@github.com:CartoDB/cartodb -b "${BRANCH_NAME}" --depth 1 --recursive .']
  volumes:
  - name: 'ssh'
    path: /root/.ssh

# Copy files to the right directories to run the tests
- name: ubuntu
  entrypoint: /bin/bash
  args:
    - -c
    - |
      cp private/script/ci/* .
      cp private/Dockerfile .
      cp -r private/build_resources/ .
      cp script/ci/* .
      cp config/app_config.yml.sample config/app_config.yml
      cp config/database.yml.sample config/database.yml
      cp lib/assets/javascripts/cdb/secrets.example.json lib/assets/javascripts/cdb/secrets.json

# Build image
- name: gcr.io/cloud-builders/docker
  entrypoint: /bin/bash
  env
  args:
    - -cx
    - |
      docker pull gcr.io/cartodb-on-gcp-main-artifacts/builder:${_BRANCH_TAG}
      if [ ! -z "$?" ]
        then
          docker pull gcr.io/cartodb-on-gcp-main-artifacts/builder:latest
          docker tag gcr.io/cartodb-on-gcp-main-artifacts/builder:latest gcr.io/cartodb-on-gcp-main-artifacts/builder:${_BRANCH_TAG}
        fi
      docker build ${_IMAGE_LABELS} --build-arg COMPILE_ASSETS=true --build-arg BUNDLE_JOBS=16 -t gcr.io/cartodb-on-gcp-main-artifacts/builder:current -t gcr.io/cartodb-on-gcp-main-artifacts/builder:${_BRANCH_TAG} -t gcr.io/cartodb-on-gcp-main-artifacts/builder:${SHORT_SHA} -t gcr.io/cartodb-on-gcp-main-artifacts/builder:${_BRANCH_TAG}--${SHORT_SHA} --cache-from gcr.io/cartodb-on-gcp-main-artifacts/builder:${_BRANCH_TAG} .

# Push current branch image to registry
- name: gcr.io/cloud-builders/docker
  entrypoint: /bin/bash
  args:
    - -cx
    - |
      if [ ! -z "${_BRANCH_TAG}" ] && [ ! "${_BRANCH_TAG}" == 'master' ]
      then
        docker push gcr.io/cartodb-on-gcp-main-artifacts/builder:${_BRANCH_TAG}
        docker push gcr.io/cartodb-on-gcp-main-artifacts/builder:${SHORT_SHA}
        docker push gcr.io/cartodb-on-gcp-main-artifacts/builder:${_BRANCH_TAG}--${SHORT_SHA}
      fi

# Run tests
- name: 'docker/compose:1.22.0'
  args: ['-f', 'docker-compose-pg12.yml', 'up', '--build', '-d']
  timeout: 900s

- name: gcr.io/cloud-builders/docker
  args: ['exec', '-i', 'builder_1', 'bash', '-c', '/cartodb/runParallelTests.sh 24' ]
  timeout: 2700s

substitutions: 
    _BRANCH_TAG: ${BRANCH_NAME//\//-}
    _IMAGE_LABELS: --label org.opencontainers.image.created='$(date --rfc-3339=seconds)' --label org.opencontainers.image.revision='${COMMIT_SHA}'
options:
    machineType: 'N1_HIGHCPU_32'
timeout: 3600s
